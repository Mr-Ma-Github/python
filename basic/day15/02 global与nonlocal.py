# -*-coding:utf-8-*-
# @作者：haiyu.ma
# @创建日期：2020-11-26 23:25 
# @Software：PyCharm
# ----------------------------------------------------------------------------
# 一 global：
# 示范一：
# x = 100
# def foo():
#     x = 300  # 在函数调用时产生局部作用域的名字x
#
# foo()
# print(x) # 在全局找x,结果为100

# 在函数内，无论嵌套多少层，都可以查看到全局作用域的名字，若要在函数内修改全局名称空间中名字的值，
# 当值为不可变类型时，则需要用到global关键字
# 示范二：如果再局部想要修改全局的值（不可变类型），需要global
# x = 100
# def foo():
#     global x  # global声明x这个名字是全局的名字，不要再造新的名字了
#     x = 300
#
# foo()
# print(x)

# 示范三：可比类型不需要global，直接append即可
# l = [111, 222]
# def func():
#     l.append(333)
#
# func()
# print(l)

# 一 nonlocal：修改函数外层函数包含的名字对应的值（不可变类型）
# 对于嵌套多层的函数，使用nonlocal关键字可以将名字声明为来自外部嵌套函数定义的作用域（非全局）
x = 1
def  f1():
    x = 2
    def f2():
        nonlocal x
        x = 3
    f2()  # 调用f2(),修改f1作用域中名字x的值
    print(x) # 在f1作用域查看x

f1()
# nonlocal x会从当前函数的外层函数开始一层层去查找名字x，若是一直到最外层函数都找不到，则会抛出异常。