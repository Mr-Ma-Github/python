# -*-coding:utf-8-*-
# @作者：haiyu.ma
# @创建日期：2020-09-23 22:21 
# @Software：PyCharm
""
"""
人--------编程语言-----------计算机
人类的程序-----0101010101010

编译型-----》Gcc编译器------》机器语言
解释型-----》解释器（解释一行执行一行）------》机器语言

day02：python入门（*****）
    1.编程语言介绍
        机器语言
        汇编语言
        高级语言（编译型、解释型号）
        总结：1.执行效率：机器语言>汇编语言>高级语言(编译型>解释型）
              2.执行效率：机器语言<汇编语言<高级语言(编译型<解释型）
              3.跨平台性：解释型语言具有极强的跨平台性

    2.python介绍
        python语言：指的是python的语法风格
        python解释器：专门用来识别python这门语言的语法并解释执行的
        python解释器与python的关系：
            1.python解释器是一款应用程序，专门用来解释python这门语言的语法风格并执行的
            2.python语言编写的程序最终都是被解释器执行的，所以我们可以这么说python语言更多的
              都是在调用python解释器的功能，所以解释器性能的高低很大程度决定了我们用python写
              出来的程序执行效率的高低

    3.解释器多版本共存
        设置环境变量
            Windows：
                Windows10：参考视频
                Windows7：冒号分隔
            linux：
                vim /etc/profile
                    PATH=$PATH:python安装路径
                    export PATH
            mac：
                同Linux

    4.运行python程序的两种方式
        1.交互式：
            及时得到程序的运行结果，多用于调试
        2.脚本的方式：
            把程序写到文件（.py）里，然后用python解释器解释执行其中的内容
        运行方式：python 程序文件的路径

    5.一个python程序运行的三个步骤（******）
        python C:/a/b/c.py
            1.先启动python解释器（此时相当于启动了一个文本编辑器）
            2.解释器会发送系统调用，把c.py的内容从硬盘读入内存，此时c.py中的内容全部为
              普通字符，没有任何语法意义
            3.解释器开始解释执行刚刚读入内存的c.py的代码，开始识别python语法
        对比文本编辑器运行的三个步骤：
            1.先启动文本编辑器
            2.文本编辑器会发送系统调用，把c.py的内容从硬盘读入内存
            3.文本编辑器会将刚刚读入内存的c.py的内容控制输出到屏幕上，让用户看到结果
        总结：
            二者在前两个阶段做的事情完全一致
            唯一不同的就是第三个阶段对读入内存的python代码的处理方式不同
    6.注释：单行注释、多行注释
        1.注释是对代码的解释说明
        2.被注释的代码不会被执行

    7.IDE集成开发环境：pycharm
    virtualenv environment-->   虚拟环境
    new environment -->
        勾选Inherit global site-packages可以使用base interpreter中的第三方库，不选将和外界完全隔离，
                只有基本的东西，例如pip和setuptools，然后您就可以安装所需的东西
        勾选Make available to all projects可将此虚拟环境提供给其他项目使用
        
"""
